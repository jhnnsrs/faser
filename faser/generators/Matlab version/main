addpath([pwd '\export_fig']);

%%%%%%%%%program body %%%%%%%%%%%%%
% Definition, what to compute
C.psfs=3; % PSFs to compute ('1': STED only, '2': 2P only, '3': all 3)
C.pol=[1,1]; % [STED Exc] polarization case (1: elliptical, 2: radial, 3: azimuthal)
C.wind=3; % Window type ('1': old, '2': new, '3': no window)
C.quantif=1;

% Visualisation
V.input=[0,0,0,0,0,0]; % '1': yes, '0': no ([input STED amp,input Exc amp,STED phase mask, Effective STED phase mask, STED_aberrations, Exc_aberration]) 
V.psf=[1,1,1]; % '1': yes, '0': no ([STED PSF, Exc PSF, Effective PSF])
V.quantif=1;

%%%% Initialization %%%%
Sp=Set_parameters(C);

% par=zeros(Sp.it,1);
Imax_eff=nan(Sp.it,1);
Imax_exc=nan(Sp.it,1);
Ivol_exc=nan(Sp.it,1);
Ivol_eff=nan(Sp.it,1);
FWHM_eff=nan(Sp.it,3);
FWHM_exc=nan(Sp.it,3);

% i=1;
for i=1:1:Sp.it
    tic
%     par(i)=0.005+0.05*(i-1);
%     Sp.Nphi=par(i);
%     par(i)=100e-6+(i-1)*30e-6/Sp.it;
%     Sp.thick=par(i);
%     par(i)=(i-1)*0.025;
%     Sp.a5(1)=par(i);
%     Sp.a5(2)=par(i);
%     Sp.a11(2)=-0.97+par(i);
    Sp.gamma=0.4*(i-1);
    par(i)=Sp.gamma;
%     par(i)=0.1+5*(i-1)/Sp.it;
%     Sp.Isat=par(i);
%     Sp.w(2)=10e-3*i/Sp.it;
%     par(i)=Sp.w(2);
%     par(i)=1.8+(i-6)*0.1;
%     Sp.r_wind=par(i)*1e-3;
    
    Cp=Calculated_parameters(Sp);
    [Pup,Foc]=Initialize_parameters(Sp,Cp);
    Pup=Pupil_functions(Pup,C,Sp,Cp);
    
    if C.psfs==1
        if C.mode==4
            [Ex,Ey,Ez]=...
                Electric_field_computation(C,Sp,Cp,Foc,1,2);
            I_donut=Intensity_computation(Ex,Ey,Ez);
            Sp.a4(1)=Sp.Defoc_B;
            [Ex,Ey,Ez]=...
                Electric_field_computation(C,Sp,Cp,Foc,1,3);
            I_bottle=Intensity_computation(Ex,Ey,Ez);
            Foc.sted.Itot=Sp.p*I_donut+(1-Sp.p)*I_bottle; 
            Foc.sted.Itot=Foc.sted.Itot/max(Foc.sted.Itot,[],'all');
        else
            [Ex,Ey,Ez]=...
                Electric_field_computation(C,Sp,Cp,Foc,1,C.mode);
            Foc.sted.Itot=Intensity_computation(Ex,Ey,Ez);
            Foc.sted.Itot=Foc.sted.Itot/max(Foc.sted.Itot,[],'all');
        end
    elseif C.psfs==2
        [Ex,Ey,Ez]=...
            Electric_field_computation(C,Sp,Cp,Foc,2,C.mode);
        Foc.exc.Itot=Intensity_computation(Ex,Ey,Ez);
        Foc.exc.Itot=Foc.exc.Itot/max(Foc.exc.Itot,[],'all');
        [Imax_exc(i,:),FWHM_exc(i,:)]=Quantif_psf(Foc.exc.Itot,Foc,Sp);
    elseif C.psfs==3
        if C.mode==4
            [Ex,Ey,Ez]=...
                Electric_field_computation(C,Sp,Cp,Foc,1,2);
            I_donut=Intensity_computation(Ex,Ey,Ez);
            Sp.a4(1)=Sp.Defoc_B;
            [Ex,Ey,Ez]=...
                Electric_field_computation(C,Sp,Cp,Foc,1,3);
            I_bottle=Intensity_computation(Ex,Ey,Ez);
            Foc.sted.Itot=Sp.p*I_donut+(1-Sp.p)*I_bottle;
        else
            [Ex,Ey,Ez]=...
                Electric_field_computation(C,Sp,Cp,Foc,1,C.mode);
            Foc.sted.Itot=Intensity_computation(Ex,Ey,Ez);
        end
        [Ex,Ey,Ez]=...
            Electric_field_computation(C,Sp,Cp,Foc,2,C.mode);
        Foc.exc.Itot=Intensity_computation(Ex,Ey,Ez);
%         Foc.exc.Itot=Foc.exc.Itot/max(Foc.exc.Itot,[],'all');
        [Imax_exc(i,:),Ivol_exc(i,:),FWHM_exc(i,:)]=Quantif_psf(Foc.exc.Itot,Foc,Sp);
%         Imax_exc(i,:)=Imax_exc(i,:)/Imax_exc(1,:);

        Sp.gamma=0;
        Cp=Calculated_parameters(Sp);
        [Ex,Ey,Ez]=...
            Electric_field_computation(C,Sp,Cp,Foc,2,C.mode);
        Foc.exc.Itot=Intensity_computation(Ex,Ey,Ez);
        Foc.exc.Itot=Foc.exc.Itot/max(Foc.exc.Itot,[],'all');

        Foc.eff.Itot=Foc.exc.Itot.*exp(-Foc.sted.Itot/Sp.Isat);
        [Imax_eff(i,:),Ivol_eff(i,:),FWHM_eff(i,:)]=Quantif_psf(Foc.eff.Itot,Foc,Sp);
    else
        disp('Unknown PSF calculation request');
    end
    
    Visualization(V,Sp,Cp,Pup,Foc);

    toc
    
end

dir='D:\own cloud\Matlab_scripts\PSF generation - Vectorial\5- Tilted coverslip - without window - pupil function\Figures\';
simu='gamma_';

%%
figure(16);
plot(par/2,FWHM_eff(:,1)/sqrt(2),'r',par/2,FWHM_exc(:,1)/sqrt(2),'b',par/2,FWHM_eff(:,2)/sqrt(2),'r:',par/2,FWHM_exc(:,2)/sqrt(2),'b:',...
    'LineWidth',2,'Font',14);
legend('FwHM_x eff','FWHM_x exc','FwHM_y eff','FWHM_y exc')
title('XY resolution');
% name=[dir simu 'FWHM_xy.pdf'];
% export_fig(name);

figure(17);
plot(par/2,FWHM_eff(:,3)/sqrt(2),'r',par/2,FWHM_exc(:,3)/sqrt(2),'b','LineWidth',2);
legend('FwHM_z eff','FWHM_z exc')
title('Z resolution');
% name=[dir simu 'FWHM_z.pdf'];
% export_fig(name);

% ylim([0.1e-6 0.4e-6]);
% figure(18);
% plot(par,Foc.Ivol_eff(:,1),'r',par,Foc.Ivol_exc(:,1),'b');
% title('Volume>');
% % ylim([0 1.1]);
%

figure(19);
% plot(par,Imax_eff(:,1)/max(Imax_exc,[],1),'r',par,Imax_exc(:,1)/max(Imax_exc,[],1),'b');
Iplot(:,1)=Imax_exc(:,1)./(max(Imax_exc)-(max(Imax_exc)*par(:)/12).^2);
plot(par/2,Imax_eff(:,1)/1.1,'r',par/2,Iplot(:,1),'b','LineWidth',2);
legend('I eff','I exc')
title('Max intensity');
ylim([0 1.1]);
% name=[dir simu 'Imax.pdf'];
% export_fig(name);